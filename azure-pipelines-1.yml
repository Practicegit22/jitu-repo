trigger:
  branches:
    include:
      - feature/*
      - main

pool:
  name: jitu agent

parameters:
  - name: runinit
    type: boolean
    default: true

  - name: runplan
    type: boolean
    default: true

  - name: runapply
    type: boolean
    default: true

variables:
  workingdir: '$(System.DefaultWorkingDirectory)/Parent'
  backend: 'Jitu SCN'

jobs:
- job: Terraform_Init
  condition: eq(${{ parameters.runinit }}, true)
  steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      displayName: init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(workingdir)
        backendServiceArm: $(backend)
        backendAzureRmStorageAccountName: 'shivajitustorage1'
        backendAzureRmContainerName: 'shivacontainer1'
        backendAzureRmKey: 'shiva.tfstate'

- job: Terraform_Plan
  dependsOn: Terraform_Init
  condition: eq(${{ parameters.runplan }}, true)
  steps:
    - task: TerraformTask@5
      displayName: plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: $(workingdir)
        environmentServiceNameAzureRM: $(backend)

- job: Terraform_Apply
  dependsOn: Terraform_Plan
  condition: and(
              eq(${{ parameters.runapply }}, true),
              eq(variables['Build.SourceBranch'], 'refs/heads/main')
            )
  steps:
    - task: TerraformTask@5
      displayName: apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: $(workingdir)
        commandOptions: '--auto-approve'
        environmentServiceNameAzureRM: $(backend)
